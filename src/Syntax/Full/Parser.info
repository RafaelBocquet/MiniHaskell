-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.4 from src/Syntax/Full/Parser.y
-----------------------------------------------------------------------------


rule 3 is unused
rule 4 is unused
rule 13 is unused
rule 14 is unused
rule 17 is unused
rule 18 is unused
rule 19 is unused
rule 20 is unused
rule 35 is unused
rule 36 is unused
rule 37 is unused
rule 54 is unused
rule 55 is unused
rule 56 is unused
rule 57 is unused
rule 58 is unused
rule 59 is unused
rule 60 is unused
rule 61 is unused
rule 62 is unused
rule 63 is unused
rule 64 is unused
rule 65 is unused
rule 66 is unused
rule 67 is unused
rule 68 is unused
rule 69 is unused
rule 70 is unused
rule 93 is unused
rule 94 is unused
rule 96 is unused
rule 111 is unused
rule 112 is unused
rule 113 is unused
rule 117 is unused
rule 118 is unused
rule 119 is unused

terminal 'class' is unused
terminal 'default' is unused
terminal 'deriving' is unused
terminal 'do' is unused
terminal 'else' is unused
terminal 'if' is unused
terminal 'in' is unused
terminal 'infix' is unused
terminal 'infixl' is unused
terminal 'infixr' is unused
terminal 'instance' is unused
terminal 'let' is unused
terminal 'newtype' is unused
terminal 'then' is unused
terminal '..' is unused
terminal ':' is unused
terminal '<-' is unused
terminal '~' is unused
terminal '=>' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseModule -> module                       (0)
	varId -> tvarId                                    (1)
	conId -> tconId                                    (2)
	symId -> tsymId                                    (3)
	symconId -> tsymconId                              (4)
	qvarId -> tvarId                                   (5)
	qvarId -> tqvarId                                  (6)
	qconId -> tconId                                   (7)
	qconId -> tqconId                                  (8)
	qsymId -> tsymId                                   (9)
	qsymId -> tqsymId                                  (10)
	qsymconId -> tsymconId                             (11)
	qsymconId -> tqsymconId                            (12)
	qtyvarId -> tvarId                                 (13)
	qtyvarId -> tqvarId                                (14)
	qtyconId -> tconId                                 (15)
	qtyconId -> tqconId                                (16)
	qtysymId -> tsymId                                 (17)
	qtysymId -> tqsymId                                (18)
	qtysymconId -> tsymconId                           (19)
	qtysymconId -> tqsymconId                          (20)
	module -> moduleHeader moduleBody                  (21)
	moduleHeader -> 'module' moduleName 'where'        (22)
	moduleHeader ->                                    (23)
	moduleBody -> '{' separated_nonempty_list(importDeclaration,nonempty_list(';')) '}'   (24)
	moduleBody -> '{' separated_nonempty_list(importDeclaration,nonempty_list(';')) separated_nonempty_list(topDeclaration,nonempty_list(';')) '}'   (25)
	moduleBody -> '{' separated_nonempty_list(topDeclaration,nonempty_list(';')) '}'   (26)
	moduleName -> qconId                               (27)
	importDeclaration -> 'import' moduleName           (28)
	topDeclaration -> 'type' simpletype '=' type       (29)
	topDeclaration -> 'data' simpletype '=' separated_nonempty_list(constructor,'|')   (30)
	topDeclaration -> declaration                      (31)
	declaration -> genDeclaration                      (32)
	declaration -> leftHandSide rightHandSide          (33)
	genDeclaration -> separated_nonempty_list(varId,',') '::' typeSignature   (34)
	fixity -> 'infixl'                                 (35)
	fixity -> 'infixr'                                 (36)
	fixity -> 'infix'                                  (37)
	leftHandSide -> varId nonempty_list(pattern)       (38)
	rightHandSide -> '=' expression                    (39)
	constructor -> conId list(atype)                   (40)
	typeSignature -> type                              (41)
	simpletype -> conId list(varId)                    (42)
	type -> separated_nonempty_list(btype,'->')        (43)
	btype -> nonempty_list(atype)                      (44)
	atype -> gtycon                                    (45)
	atype -> varId                                     (46)
	atype -> delimited('(',separated_nonempty_list(type,','),')')   (47)
	atype -> delimited('[',type,']')                   (48)
	gtycon -> '(' ')'                                  (49)
	gtycon -> '(' nonempty_list(',') ')'               (50)
	gtycon -> '[' ']'                                  (51)
	gtycon -> '(' '->' ')'                             (52)
	gtycon -> qtyconId                                 (53)
	context -> class '=>'                              (54)
	context -> delimited('(',separated_list(class,','),')') '=>'   (55)
	simplecontext -> simpleclass '=>'                  (56)
	simplecontext -> delimited('(',separated_list(simpleclass,','),')') '=>'   (57)
	class -> qconId varId                              (58)
	class -> qconId delimited('(',atype,')')           (59)
	simpleclass -> qconId varId                        (60)
	classDeclaration -> genDeclaration                 (61)
	classDeclaration -> leftHandSide rightHandSide     (62)
	classDeclaration -> varId rightHandSide            (63)
	instance -> gtycon                                 (64)
	instance -> '(' gtycon list(varId) ')'             (65)
	instance -> '(' varId ',' separated_nonempty_list(varId,',') ')'   (66)
	instance -> '[' varId ']'                          (67)
	instance -> '(' qtyvarId '->' qtyvarId ')'         (68)
	instanceDeclaration -> leftHandSide rightHandSide   (69)
	instanceDeclaration -> varId rightHandSide         (70)
	operator -> qsymId                                 (71)
	operator -> qsymconId                              (72)
	operator -> '`' qconId '`'                         (73)
	operator -> '`' qvarId '`'                         (74)
	expression -> expression10                         (75)
	expression -> expression operator expression10     (76)
	expression10 -> '\\' nonempty_list(pattern) '->' expression   (77)
	expression10 -> 'case' expression 'of' '{' separated_nonempty_list(option(casealternative),';') '}'   (78)
	expression10 -> nonempty_list(aexpression)         (79)
	aexpression -> qvarId                              (80)
	aexpression -> integer                             (81)
	aexpression -> char                                (82)
	aexpression -> string                              (83)
	aexpression -> delimited('(',separated_list(expression,','),')')   (84)
	aexpression -> delimited('[',separated_nonempty_list(expression,','),']')   (85)
	casealternative -> pattern '->' expression         (86)
	pattern -> pattern10                               (87)
	pattern -> pattern qsymconId pattern10             (88)
	pattern10 -> apattern                              (89)
	apattern -> varId                                  (90)
	apattern -> varId '@' apattern                     (91)
	apattern -> '_'                                    (92)
	delimited('(',atype,')') -> '(' atype ')'          (93)
	delimited('(',separated_list(class,','),')') -> '(' separated_list(class,',') ')'   (94)
	delimited('(',separated_list(expression,','),')') -> '(' separated_list(expression,',') ')'   (95)
	delimited('(',separated_list(simpleclass,','),')') -> '(' separated_list(simpleclass,',') ')'   (96)
	delimited('(',separated_nonempty_list(type,','),')') -> '(' separated_nonempty_list(type,',') ')'   (97)
	delimited('[',separated_nonempty_list(expression,','),']') -> '[' separated_nonempty_list(expression,',') ']'   (98)
	delimited('[',type,']') -> '[' type ']'            (99)
	list(atype) -> list(atype) atype                   (100)
	list(atype) ->                                     (101)
	list(varId) -> list(varId) varId                   (102)
	list(varId) ->                                     (103)
	nonempty_list(',') -> list(',') ','                (104)
	nonempty_list(';') -> list(';') ';'                (105)
	nonempty_list(aexpression) -> list(aexpression) aexpression   (106)
	nonempty_list(atype) -> list(atype) atype          (107)
	nonempty_list(pattern) -> list(pattern) pattern    (108)
	option(casealternative) -> casealternative         (109)
	option(casealternative) ->                         (110)
	separated_list(class,',') -> separated_list(class,',') ',' class   (111)
	separated_list(class,',') -> class                 (112)
	separated_list(class,',') ->                       (113)
	separated_list(expression,',') -> separated_list(expression,',') ',' expression   (114)
	separated_list(expression,',') -> expression       (115)
	separated_list(expression,',') ->                  (116)
	separated_list(simpleclass,',') -> separated_list(simpleclass,',') ',' simpleclass   (117)
	separated_list(simpleclass,',') -> simpleclass     (118)
	separated_list(simpleclass,',') ->                 (119)
	separated_nonempty_list(btype,'->') -> separated_nonempty_list(btype,'->') '->' btype   (120)
	separated_nonempty_list(btype,'->') -> btype       (121)
	separated_nonempty_list(constructor,'|') -> separated_nonempty_list(constructor,'|') '|' constructor   (122)
	separated_nonempty_list(constructor,'|') -> constructor   (123)
	separated_nonempty_list(expression,',') -> separated_nonempty_list(expression,',') ',' expression   (124)
	separated_nonempty_list(expression,',') -> expression   (125)
	separated_nonempty_list(importDeclaration,nonempty_list(';')) -> separated_nonempty_list(importDeclaration,nonempty_list(';')) nonempty_list(';') importDeclaration   (126)
	separated_nonempty_list(importDeclaration,nonempty_list(';')) -> importDeclaration   (127)
	separated_nonempty_list(option(casealternative),';') -> separated_nonempty_list(option(casealternative),';') ';' option(casealternative)   (128)
	separated_nonempty_list(option(casealternative),';') -> option(casealternative)   (129)
	separated_nonempty_list(topDeclaration,nonempty_list(';')) -> separated_nonempty_list(topDeclaration,nonempty_list(';')) nonempty_list(';') topDeclaration   (130)
	separated_nonempty_list(topDeclaration,nonempty_list(';')) -> topDeclaration   (131)
	separated_nonempty_list(type,',') -> separated_nonempty_list(type,',') ',' type   (132)
	separated_nonempty_list(type,',') -> type          (133)
	separated_nonempty_list(varId,',') -> separated_nonempty_list(varId,',') ',' varId   (134)
	separated_nonempty_list(varId,',') -> varId        (135)
	list(',') -> list(',') ','                         (136)
	list(',') ->                                       (137)
	list(';') -> list(';') ';'                         (138)
	list(';') ->                                       (139)
	list(aexpression) -> list(aexpression) aexpression   (140)
	list(aexpression) ->                               (141)
	list(pattern) -> list(pattern) pattern             (142)
	list(pattern) ->                                   (143)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	tvarId         { t | isVariableIdentifier t }
	tconId         { t | isConstructorIdentifier t }
	tsymId         { t | isSymbolIdentifier t }
	tsymconId      { t | isSymbolConstructorIdentifier t }
	tqvarId        { t | isQVariableIdentifier t }
	tqconId        { t | isQConstructorIdentifier t }
	tqsymId        { t | isQSymbolIdentifier t }
	tqsymconId     { t | isQSymbolConstructorIdentifier t }
	integer        { TkInteger _ }
	char           { TkChar _ }
	string         { TkString _ }
	'case'         { TkCase }
	'class'        { TkClass }
	'data'         { TkData }
	'default'      { TkDefault }
	'deriving'     { TkDeriving }
	'do'           { TkDo }
	'else'         { TkElse }
	'if'           { TkIf }
	'import'       { TkImport }
	'in'           { TkIn }
	'infix'        { TkInfix }
	'infixl'       { TkInfixl }
	'infixr'       { TkInfixr }
	'instance'     { TkInstance }
	'let'          { TkLet }
	'module'       { TkModule }
	'newtype'      { TkNewtype }
	'of'           { TkOf }
	'then'         { TkThen }
	'type'         { TkType }
	'where'        { TkWhere }
	'_'            { TkUnderscore }
	'..'           { TkDoubleDot }
	':'            { TkColon }
	'::'           { TkDoubleColon }
	'='            { TkEqual }
	'\\'           { TkLambda }
	'|'            { TkPipe }
	'<-'           { TkLArrow }
	'->'           { TkRArrow }
	'@'            { TkAt }
	'~'            { TkTilde }
	'=>'           { TkFatArrow }
	'('            { TkLParen }
	')'            { TkRParen }
	','            { TkComma }
	';'            { TkSemiColon }
	'['            { TkLBracket }
	']'            { TkRBracket }
	'`'            { TkBackTick }
	'{'            { TkLBrace }
	'}'            { TkRBrace }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseModule rule  0
	varId           rule  1
	conId           rule  2
	symId           rule  3
	symconId        rule  4
	qvarId          rules 5, 6
	qconId          rules 7, 8
	qsymId          rules 9, 10
	qsymconId       rules 11, 12
	qtyvarId        rules 13, 14
	qtyconId        rules 15, 16
	qtysymId        rules 17, 18
	qtysymconId     rules 19, 20
	module          rule  21
	moduleHeader    rules 22, 23
	moduleBody      rules 24, 25, 26
	moduleName      rule  27
	importDeclaration rule  28
	topDeclaration  rules 29, 30, 31
	declaration     rules 32, 33
	genDeclaration  rule  34
	fixity          rules 35, 36, 37
	leftHandSide    rule  38
	rightHandSide   rule  39
	constructor     rule  40
	typeSignature   rule  41
	simpletype      rule  42
	type            rule  43
	btype           rule  44
	atype           rules 45, 46, 47, 48
	gtycon          rules 49, 50, 51, 52, 53
	context         rules 54, 55
	simplecontext   rules 56, 57
	class           rules 58, 59
	simpleclass     rule  60
	classDeclaration rules 61, 62, 63
	instance        rules 64, 65, 66, 67, 68
	instanceDeclaration rules 69, 70
	operator        rules 71, 72, 73, 74
	expression      rules 75, 76
	expression10    rules 77, 78, 79
	aexpression     rules 80, 81, 82, 83, 84, 85
	casealternative rule  86
	pattern         rules 87, 88
	pattern10       rule  89
	apattern        rules 90, 91, 92
	delimited('(',atype,')') rule  93
	delimited('(',separated_list(class,','),')') rule  94
	delimited('(',separated_list(expression,','),')') rule  95
	delimited('(',separated_list(simpleclass,','),')') rule  96
	delimited('(',separated_nonempty_list(type,','),')') rule  97
	delimited('[',separated_nonempty_list(expression,','),']') rule  98
	delimited('[',type,']') rule  99
	list(atype)     rules 100, 101
	list(varId)     rules 102, 103
	nonempty_list(',') rule  104
	nonempty_list(';') rule  105
	nonempty_list(aexpression) rule  106
	nonempty_list(atype) rule  107
	nonempty_list(pattern) rule  108
	option(casealternative) rules 109, 110
	separated_list(class,',') rules 111, 112, 113
	separated_list(expression,',') rules 114, 115, 116
	separated_list(simpleclass,',') rules 117, 118, 119
	separated_nonempty_list(btype,'->') rules 120, 121
	separated_nonempty_list(constructor,'|') rules 122, 123
	separated_nonempty_list(expression,',') rules 124, 125
	separated_nonempty_list(importDeclaration,nonempty_list(';')) rules 126, 127
	separated_nonempty_list(option(casealternative),';') rules 128, 129
	separated_nonempty_list(topDeclaration,nonempty_list(';')) rules 130, 131
	separated_nonempty_list(type,',') rules 132, 133
	separated_nonempty_list(varId,',') rules 134, 135
	list(',')       rules 136, 137
	list(';')       rules 138, 139
	list(aexpression) rules 140, 141
	list(pattern)   rules 142, 143

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'module'       shift, and enter state 5
	'{'            reduce using rule 23

	module         goto state 3
	moduleHeader   goto state 4

State 1


	tvarId         shift, and enter state 2


State 2

	varId -> tvarId .                                   (rule 1)

	tvarId         reduce using rule 1
	tconId         reduce using rule 1
	tsymconId      reduce using rule 1
	tqconId        reduce using rule 1
	tqsymconId     reduce using rule 1
	'_'            reduce using rule 1
	'::'           reduce using rule 1
	'='            reduce using rule 1
	'|'            reduce using rule 1
	'->'           reduce using rule 1
	'@'            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	','            reduce using rule 1
	';'            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'}'            reduce using rule 1


State 3

	%start_parseModule -> module .                      (rule 0)

	%eof           accept


State 4

	module -> moduleHeader . moduleBody                 (rule 21)

	'{'            shift, and enter state 11

	moduleBody     goto state 10

State 5

	moduleHeader -> 'module' . moduleName 'where'       (rule 22)

	tconId         shift, and enter state 8
	tqconId        shift, and enter state 9

	qconId         goto state 6
	moduleName     goto state 7

State 6

	moduleName -> qconId .                              (rule 27)

	tvarId         reduce using rule 27
	'data'         reduce using rule 27
	'type'         reduce using rule 27
	'where'        reduce using rule 27
	';'            reduce using rule 27
	'}'            reduce using rule 27


State 7

	moduleHeader -> 'module' moduleName . 'where'       (rule 22)

	'where'        shift, and enter state 24


State 8

	qconId -> tconId .                                  (rule 7)

	tvarId         reduce using rule 7
	'data'         reduce using rule 7
	'type'         reduce using rule 7
	'where'        reduce using rule 7
	';'            reduce using rule 7
	'`'            reduce using rule 7
	'}'            reduce using rule 7


State 9

	qconId -> tqconId .                                 (rule 8)

	tvarId         reduce using rule 8
	'data'         reduce using rule 8
	'type'         reduce using rule 8
	'where'        reduce using rule 8
	';'            reduce using rule 8
	'`'            reduce using rule 8
	'}'            reduce using rule 8


State 10

	module -> moduleHeader moduleBody .                 (rule 21)

	%eof           reduce using rule 21


State 11

	moduleBody -> '{' . separated_nonempty_list(importDeclaration,nonempty_list(';')) '}'    (rule 24)
	moduleBody -> '{' . separated_nonempty_list(importDeclaration,nonempty_list(';')) separated_nonempty_list(topDeclaration,nonempty_list(';')) '}'    (rule 25)
	moduleBody -> '{' . separated_nonempty_list(topDeclaration,nonempty_list(';')) '}'    (rule 26)

	tvarId         shift, and enter state 2
	'data'         shift, and enter state 21
	'import'       shift, and enter state 22
	'type'         shift, and enter state 23

	varId          goto state 12
	importDeclarationgoto state 13
	topDeclaration goto state 14
	declaration    goto state 15
	genDeclaration goto state 16
	leftHandSide   goto state 17
	separated_nonempty_list(importDeclaration,nonempty_list(';'))goto state 18
	separated_nonempty_list(topDeclaration,nonempty_list(';'))goto state 19
	separated_nonempty_list(varId,',')goto state 20

State 12

	leftHandSide -> varId . nonempty_list(pattern)      (rule 38)
	separated_nonempty_list(varId,',') -> varId .       (rule 135)

	tvarId         reduce using rule 143
	'_'            reduce using rule 143
	'::'           reduce using rule 135
	','            reduce using rule 135

	nonempty_list(pattern)goto state 40
	list(pattern)  goto state 41

State 13

	separated_nonempty_list(importDeclaration,nonempty_list(';')) -> importDeclaration .    (rule 127)

	tvarId         reduce using rule 127
	'data'         reduce using rule 127
	'type'         reduce using rule 127
	';'            reduce using rule 127
	'}'            reduce using rule 127


State 14

	separated_nonempty_list(topDeclaration,nonempty_list(';')) -> topDeclaration .    (rule 131)

	';'            reduce using rule 131
	'}'            reduce using rule 131


State 15

	topDeclaration -> declaration .                     (rule 31)

	';'            reduce using rule 31
	'}'            reduce using rule 31


State 16

	declaration -> genDeclaration .                     (rule 32)

	';'            reduce using rule 32
	'}'            reduce using rule 32


State 17

	declaration -> leftHandSide . rightHandSide         (rule 33)

	'='            shift, and enter state 39

	rightHandSide  goto state 38

State 18

	moduleBody -> '{' separated_nonempty_list(importDeclaration,nonempty_list(';')) . '}'    (rule 24)
	moduleBody -> '{' separated_nonempty_list(importDeclaration,nonempty_list(';')) . separated_nonempty_list(topDeclaration,nonempty_list(';')) '}'    (rule 25)
	separated_nonempty_list(importDeclaration,nonempty_list(';')) -> separated_nonempty_list(importDeclaration,nonempty_list(';')) . nonempty_list(';') importDeclaration    (rule 126)

	tvarId         shift, and enter state 2
	'data'         shift, and enter state 21
	'type'         shift, and enter state 23
	';'            reduce using rule 139
	'}'            shift, and enter state 37

	varId          goto state 12
	topDeclaration goto state 14
	declaration    goto state 15
	genDeclaration goto state 16
	leftHandSide   goto state 17
	nonempty_list(';')goto state 35
	separated_nonempty_list(topDeclaration,nonempty_list(';'))goto state 36
	separated_nonempty_list(varId,',')goto state 20
	list(';')      goto state 33

State 19

	moduleBody -> '{' separated_nonempty_list(topDeclaration,nonempty_list(';')) . '}'    (rule 26)
	separated_nonempty_list(topDeclaration,nonempty_list(';')) -> separated_nonempty_list(topDeclaration,nonempty_list(';')) . nonempty_list(';') topDeclaration    (rule 130)

	';'            reduce using rule 139
	'}'            shift, and enter state 34

	nonempty_list(';')goto state 32
	list(';')      goto state 33

State 20

	genDeclaration -> separated_nonempty_list(varId,',') . '::' typeSignature    (rule 34)
	separated_nonempty_list(varId,',') -> separated_nonempty_list(varId,',') . ',' varId    (rule 134)

	'::'           shift, and enter state 30
	','            shift, and enter state 31


State 21

	topDeclaration -> 'data' . simpletype '=' separated_nonempty_list(constructor,'|')    (rule 30)

	tconId         shift, and enter state 27

	conId          goto state 25
	simpletype     goto state 29

State 22

	importDeclaration -> 'import' . moduleName          (rule 28)

	tconId         shift, and enter state 8
	tqconId        shift, and enter state 9

	qconId         goto state 6
	moduleName     goto state 28

State 23

	topDeclaration -> 'type' . simpletype '=' type      (rule 29)

	tconId         shift, and enter state 27

	conId          goto state 25
	simpletype     goto state 26

State 24

	moduleHeader -> 'module' moduleName 'where' .       (rule 22)

	'{'            reduce using rule 22


State 25

	simpletype -> conId . list(varId)                   (rule 42)

	tvarId         reduce using rule 103
	'='            reduce using rule 103

	list(varId)    goto state 66

State 26

	topDeclaration -> 'type' simpletype . '=' type      (rule 29)

	'='            shift, and enter state 65


State 27

	conId -> tconId .                                   (rule 2)

	tvarId         reduce using rule 2
	tconId         reduce using rule 2
	tqconId        reduce using rule 2
	'='            reduce using rule 2
	'|'            reduce using rule 2
	'('            reduce using rule 2
	';'            reduce using rule 2
	'['            reduce using rule 2
	'}'            reduce using rule 2


State 28

	importDeclaration -> 'import' moduleName .          (rule 28)

	tvarId         reduce using rule 28
	'data'         reduce using rule 28
	'type'         reduce using rule 28
	';'            reduce using rule 28
	'}'            reduce using rule 28


State 29

	topDeclaration -> 'data' simpletype . '=' separated_nonempty_list(constructor,'|')    (rule 30)

	'='            shift, and enter state 64


State 30

	genDeclaration -> separated_nonempty_list(varId,',') '::' . typeSignature    (rule 34)

	tvarId         reduce using rule 101
	tconId         reduce using rule 101
	tqconId        reduce using rule 101
	'('            reduce using rule 101
	'['            reduce using rule 101

	typeSignature  goto state 58
	type           goto state 59
	btype          goto state 60
	list(atype)    goto state 61
	nonempty_list(atype)goto state 62
	separated_nonempty_list(btype,'->')goto state 63

State 31

	separated_nonempty_list(varId,',') -> separated_nonempty_list(varId,',') ',' . varId    (rule 134)

	tvarId         shift, and enter state 2

	varId          goto state 57

State 32

	separated_nonempty_list(topDeclaration,nonempty_list(';')) -> separated_nonempty_list(topDeclaration,nonempty_list(';')) nonempty_list(';') . topDeclaration    (rule 130)

	tvarId         shift, and enter state 2
	'data'         shift, and enter state 21
	'type'         shift, and enter state 23

	varId          goto state 12
	topDeclaration goto state 56
	declaration    goto state 15
	genDeclaration goto state 16
	leftHandSide   goto state 17
	separated_nonempty_list(varId,',')goto state 20

State 33

	nonempty_list(';') -> list(';') . ';'               (rule 105)
	list(';') -> list(';') . ';'                        (rule 138)

	';'            shift, and enter state 55


State 34

	moduleBody -> '{' separated_nonempty_list(topDeclaration,nonempty_list(';')) '}' .    (rule 26)

	%eof           reduce using rule 26


State 35

	separated_nonempty_list(importDeclaration,nonempty_list(';')) -> separated_nonempty_list(importDeclaration,nonempty_list(';')) nonempty_list(';') . importDeclaration    (rule 126)

	'import'       shift, and enter state 22

	importDeclarationgoto state 54

State 36

	moduleBody -> '{' separated_nonempty_list(importDeclaration,nonempty_list(';')) separated_nonempty_list(topDeclaration,nonempty_list(';')) . '}'    (rule 25)
	separated_nonempty_list(topDeclaration,nonempty_list(';')) -> separated_nonempty_list(topDeclaration,nonempty_list(';')) . nonempty_list(';') topDeclaration    (rule 130)

	';'            reduce using rule 139
	'}'            shift, and enter state 53

	nonempty_list(';')goto state 32
	list(';')      goto state 33

State 37

	moduleBody -> '{' separated_nonempty_list(importDeclaration,nonempty_list(';')) '}' .    (rule 24)

	%eof           reduce using rule 24


State 38

	declaration -> leftHandSide rightHandSide .         (rule 33)

	';'            reduce using rule 33
	'}'            reduce using rule 33


State 39

	rightHandSide -> '=' . expression                   (rule 39)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression     goto state 47
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	list(aexpression)goto state 50

State 40

	leftHandSide -> varId nonempty_list(pattern) .      (rule 38)

	'='            reduce using rule 38


State 41

	nonempty_list(pattern) -> list(pattern) . pattern    (rule 108)
	list(pattern) -> list(pattern) . pattern            (rule 142)

	tvarId         shift, and enter state 2
	'_'            shift, and enter state 46

	varId          goto state 42
	pattern        goto state 43
	pattern10      goto state 44
	apattern       goto state 45

State 42

	apattern -> varId .                                 (rule 90)
	apattern -> varId . '@' apattern                    (rule 91)

	tvarId         reduce using rule 90
	tsymconId      reduce using rule 90
	tqsymconId     reduce using rule 90
	'_'            reduce using rule 90
	'='            reduce using rule 90
	'->'           reduce using rule 90
	'@'            shift, and enter state 105


State 43

	pattern -> pattern . qsymconId pattern10            (rule 88)
	nonempty_list(pattern) -> list(pattern) pattern .    (rule 108)
	list(pattern) -> list(pattern) pattern .            (rule 142)

	tvarId         reduce using rule 142
	tsymconId      shift, and enter state 100
	tqsymconId     shift, and enter state 102
	'_'            reduce using rule 142
	'='            reduce using rule 108
	'->'           reduce using rule 108

	qsymconId      goto state 104

State 44

	pattern -> pattern10 .                              (rule 87)

	tvarId         reduce using rule 87
	tsymconId      reduce using rule 87
	tqsymconId     reduce using rule 87
	'_'            reduce using rule 87
	'='            reduce using rule 87
	'->'           reduce using rule 87


State 45

	pattern10 -> apattern .                             (rule 89)

	tvarId         reduce using rule 89
	tsymconId      reduce using rule 89
	tqsymconId     reduce using rule 89
	'_'            reduce using rule 89
	'='            reduce using rule 89
	'->'           reduce using rule 89


State 46

	apattern -> '_' .                                   (rule 92)

	tvarId         reduce using rule 92
	tsymconId      reduce using rule 92
	tqsymconId     reduce using rule 92
	'_'            reduce using rule 92
	'='            reduce using rule 92
	'->'           reduce using rule 92


State 47

	rightHandSide -> '=' expression .                   (rule 39)
	expression -> expression . operator expression10    (rule 76)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	';'            reduce using rule 39
	'`'            shift, and enter state 103
	'}'            reduce using rule 39

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 48

	expression -> expression10 .                        (rule 75)

	tsymId         reduce using rule 75
	tsymconId      reduce using rule 75
	tqsymId        reduce using rule 75
	tqsymconId     reduce using rule 75
	'of'           reduce using rule 75
	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	']'            reduce using rule 75
	'`'            reduce using rule 75
	'}'            reduce using rule 75


State 49

	expression10 -> nonempty_list(aexpression) .        (rule 79)

	tsymId         reduce using rule 79
	tsymconId      reduce using rule 79
	tqsymId        reduce using rule 79
	tqsymconId     reduce using rule 79
	'of'           reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	';'            reduce using rule 79
	']'            reduce using rule 79
	'`'            reduce using rule 79
	'}'            reduce using rule 79


State 50

	nonempty_list(aexpression) -> list(aexpression) . aexpression    (rule 106)
	list(aexpression) -> list(aexpression) . aexpression    (rule 140)

	tvarId         shift, and enter state 89
	tqvarId        shift, and enter state 90
	integer        shift, and enter state 91
	char           shift, and enter state 92
	string         shift, and enter state 93
	'('            shift, and enter state 94
	'['            shift, and enter state 95

	qvarId         goto state 85
	aexpression    goto state 86
	delimited('(',separated_list(expression,','),')')goto state 87
	delimited('[',separated_nonempty_list(expression,','),']')goto state 88

State 51

	expression10 -> 'case' . expression 'of' '{' separated_nonempty_list(option(casealternative),';') '}'    (rule 78)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression     goto state 84
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	list(aexpression)goto state 50

State 52

	expression10 -> '\\' . nonempty_list(pattern) '->' expression    (rule 77)

	tvarId         reduce using rule 143
	'_'            reduce using rule 143

	nonempty_list(pattern)goto state 83
	list(pattern)  goto state 41

State 53

	moduleBody -> '{' separated_nonempty_list(importDeclaration,nonempty_list(';')) separated_nonempty_list(topDeclaration,nonempty_list(';')) '}' .    (rule 25)

	%eof           reduce using rule 25


State 54

	separated_nonempty_list(importDeclaration,nonempty_list(';')) -> separated_nonempty_list(importDeclaration,nonempty_list(';')) nonempty_list(';') importDeclaration .    (rule 126)

	tvarId         reduce using rule 126
	'data'         reduce using rule 126
	'type'         reduce using rule 126
	';'            reduce using rule 126
	'}'            reduce using rule 126


State 55

	nonempty_list(';') -> list(';') ';' .               (rule 105)
	list(';') -> list(';') ';' .                        (rule 138)

	tvarId         reduce using rule 105
	'data'         reduce using rule 105
	'import'       reduce using rule 105
	'type'         reduce using rule 105
	';'            reduce using rule 138


State 56

	separated_nonempty_list(topDeclaration,nonempty_list(';')) -> separated_nonempty_list(topDeclaration,nonempty_list(';')) nonempty_list(';') topDeclaration .    (rule 130)

	';'            reduce using rule 130
	'}'            reduce using rule 130


State 57

	separated_nonempty_list(varId,',') -> separated_nonempty_list(varId,',') ',' varId .    (rule 134)

	'::'           reduce using rule 134
	','            reduce using rule 134


State 58

	genDeclaration -> separated_nonempty_list(varId,',') '::' typeSignature .    (rule 34)

	';'            reduce using rule 34
	'}'            reduce using rule 34


State 59

	typeSignature -> type .                             (rule 41)

	';'            reduce using rule 41
	'}'            reduce using rule 41


State 60

	separated_nonempty_list(btype,'->') -> btype .      (rule 121)

	'->'           reduce using rule 121
	')'            reduce using rule 121
	','            reduce using rule 121
	';'            reduce using rule 121
	']'            reduce using rule 121
	'}'            reduce using rule 121


State 61

	list(atype) -> list(atype) . atype                  (rule 100)
	nonempty_list(atype) -> list(atype) . atype         (rule 107)

	tvarId         shift, and enter state 2
	tconId         shift, and enter state 79
	tqconId        shift, and enter state 80
	'('            shift, and enter state 81
	'['            shift, and enter state 82

	varId          goto state 73
	qtyconId       goto state 74
	atype          goto state 75
	gtycon         goto state 76
	delimited('(',separated_nonempty_list(type,','),')')goto state 77
	delimited('[',type,']')goto state 78

State 62

	btype -> nonempty_list(atype) .                     (rule 44)

	'->'           reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	']'            reduce using rule 44
	'}'            reduce using rule 44


State 63

	type -> separated_nonempty_list(btype,'->') .       (rule 43)
	separated_nonempty_list(btype,'->') -> separated_nonempty_list(btype,'->') . '->' btype    (rule 120)

	'->'           shift, and enter state 72
	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	']'            reduce using rule 43
	'}'            reduce using rule 43


State 64

	topDeclaration -> 'data' simpletype '=' . separated_nonempty_list(constructor,'|')    (rule 30)

	tconId         shift, and enter state 27

	conId          goto state 69
	constructor    goto state 70
	separated_nonempty_list(constructor,'|')goto state 71

State 65

	topDeclaration -> 'type' simpletype '=' . type      (rule 29)

	tvarId         reduce using rule 101
	tconId         reduce using rule 101
	tqconId        reduce using rule 101
	'('            reduce using rule 101
	'['            reduce using rule 101

	type           goto state 68
	btype          goto state 60
	list(atype)    goto state 61
	nonempty_list(atype)goto state 62
	separated_nonempty_list(btype,'->')goto state 63

State 66

	simpletype -> conId list(varId) .                   (rule 42)
	list(varId) -> list(varId) . varId                  (rule 102)

	tvarId         shift, and enter state 2
	'='            reduce using rule 42

	varId          goto state 67

State 67

	list(varId) -> list(varId) varId .                  (rule 102)

	tvarId         reduce using rule 102
	'='            reduce using rule 102


State 68

	topDeclaration -> 'type' simpletype '=' type .      (rule 29)

	';'            reduce using rule 29
	'}'            reduce using rule 29


State 69

	constructor -> conId . list(atype)                  (rule 40)

	tvarId         reduce using rule 101
	tconId         reduce using rule 101
	tqconId        reduce using rule 101
	'|'            reduce using rule 101
	'('            reduce using rule 101
	';'            reduce using rule 101
	'['            reduce using rule 101
	'}'            reduce using rule 101

	list(atype)    goto state 127

State 70

	separated_nonempty_list(constructor,'|') -> constructor .    (rule 123)

	'|'            reduce using rule 123
	';'            reduce using rule 123
	'}'            reduce using rule 123


State 71

	topDeclaration -> 'data' simpletype '=' separated_nonempty_list(constructor,'|') .    (rule 30)
	separated_nonempty_list(constructor,'|') -> separated_nonempty_list(constructor,'|') . '|' constructor    (rule 122)

	'|'            shift, and enter state 126
	';'            reduce using rule 30
	'}'            reduce using rule 30


State 72

	separated_nonempty_list(btype,'->') -> separated_nonempty_list(btype,'->') '->' . btype    (rule 120)

	tvarId         reduce using rule 101
	tconId         reduce using rule 101
	tqconId        reduce using rule 101
	'('            reduce using rule 101
	'['            reduce using rule 101

	btype          goto state 125
	list(atype)    goto state 61
	nonempty_list(atype)goto state 62

State 73

	atype -> varId .                                    (rule 46)

	tvarId         reduce using rule 46
	tconId         reduce using rule 46
	tqconId        reduce using rule 46
	'|'            reduce using rule 46
	'->'           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'}'            reduce using rule 46


State 74

	gtycon -> qtyconId .                                (rule 53)

	tvarId         reduce using rule 53
	tconId         reduce using rule 53
	tqconId        reduce using rule 53
	'|'            reduce using rule 53
	'->'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'}'            reduce using rule 53


State 75

	list(atype) -> list(atype) atype .                  (rule 100)
	nonempty_list(atype) -> list(atype) atype .         (rule 107)

	tvarId         reduce using rule 100
	tconId         reduce using rule 100
	tqconId        reduce using rule 100
	'->'           reduce using rule 107
	'('            reduce using rule 100
	')'            reduce using rule 107
	','            reduce using rule 107
	';'            reduce using rule 107
	'['            reduce using rule 100
	']'            reduce using rule 107
	'}'            reduce using rule 107


State 76

	atype -> gtycon .                                   (rule 45)

	tvarId         reduce using rule 45
	tconId         reduce using rule 45
	tqconId        reduce using rule 45
	'|'            reduce using rule 45
	'->'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'}'            reduce using rule 45


State 77

	atype -> delimited('(',separated_nonempty_list(type,','),')') .    (rule 47)

	tvarId         reduce using rule 47
	tconId         reduce using rule 47
	tqconId        reduce using rule 47
	'|'            reduce using rule 47
	'->'           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'}'            reduce using rule 47


State 78

	atype -> delimited('[',type,']') .                  (rule 48)

	tvarId         reduce using rule 48
	tconId         reduce using rule 48
	tqconId        reduce using rule 48
	'|'            reduce using rule 48
	'->'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'}'            reduce using rule 48


State 79

	qtyconId -> tconId .                                (rule 15)

	tvarId         reduce using rule 15
	tconId         reduce using rule 15
	tqconId        reduce using rule 15
	'|'            reduce using rule 15
	'->'           reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	','            reduce using rule 15
	';'            reduce using rule 15
	'['            reduce using rule 15
	']'            reduce using rule 15
	'}'            reduce using rule 15


State 80

	qtyconId -> tqconId .                               (rule 16)

	tvarId         reduce using rule 16
	tconId         reduce using rule 16
	tqconId        reduce using rule 16
	'|'            reduce using rule 16
	'->'           reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	','            reduce using rule 16
	';'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'}'            reduce using rule 16


State 81

	gtycon -> '(' . ')'                                 (rule 49)
	gtycon -> '(' . nonempty_list(',') ')'              (rule 50)
	gtycon -> '(' . '->' ')'                            (rule 52)
	delimited('(',separated_nonempty_list(type,','),')') -> '(' . separated_nonempty_list(type,',') ')'    (rule 97)

	tvarId         reduce using rule 101
	tconId         reduce using rule 101
	tqconId        reduce using rule 101
	'->'           shift, and enter state 123
	'('            reduce using rule 101
	')'            shift, and enter state 124
	','            reduce using rule 137
	'['            reduce using rule 101

	type           goto state 119
	btype          goto state 60
	list(atype)    goto state 61
	nonempty_list(',')goto state 120
	nonempty_list(atype)goto state 62
	separated_nonempty_list(btype,'->')goto state 63
	separated_nonempty_list(type,',')goto state 121
	list(',')      goto state 122

State 82

	gtycon -> '[' . ']'                                 (rule 51)
	delimited('[',type,']') -> '[' . type ']'           (rule 99)

	tvarId         reduce using rule 101
	tconId         reduce using rule 101
	tqconId        reduce using rule 101
	'('            reduce using rule 101
	'['            reduce using rule 101
	']'            shift, and enter state 118

	type           goto state 117
	btype          goto state 60
	list(atype)    goto state 61
	nonempty_list(atype)goto state 62
	separated_nonempty_list(btype,'->')goto state 63

State 83

	expression10 -> '\\' nonempty_list(pattern) . '->' expression    (rule 77)

	'->'           shift, and enter state 116


State 84

	expression -> expression . operator expression10    (rule 76)
	expression10 -> 'case' expression . 'of' '{' separated_nonempty_list(option(casealternative),';') '}'    (rule 78)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	'of'           shift, and enter state 115
	'`'            shift, and enter state 103

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 85

	aexpression -> qvarId .                             (rule 80)

	tvarId         reduce using rule 80
	tsymId         reduce using rule 80
	tsymconId      reduce using rule 80
	tqvarId        reduce using rule 80
	tqsymId        reduce using rule 80
	tqsymconId     reduce using rule 80
	integer        reduce using rule 80
	char           reduce using rule 80
	string         reduce using rule 80
	'of'           reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	','            reduce using rule 80
	';'            reduce using rule 80
	'['            reduce using rule 80
	']'            reduce using rule 80
	'`'            reduce using rule 80
	'}'            reduce using rule 80


State 86

	nonempty_list(aexpression) -> list(aexpression) aexpression .    (rule 106)
	list(aexpression) -> list(aexpression) aexpression .    (rule 140)

	tvarId         reduce using rule 140
	tsymId         reduce using rule 106
	tsymconId      reduce using rule 106
	tqvarId        reduce using rule 140
	tqsymId        reduce using rule 106
	tqsymconId     reduce using rule 106
	integer        reduce using rule 140
	char           reduce using rule 140
	string         reduce using rule 140
	'of'           reduce using rule 106
	'('            reduce using rule 140
	')'            reduce using rule 106
	','            reduce using rule 106
	';'            reduce using rule 106
	'['            reduce using rule 140
	']'            reduce using rule 106
	'`'            reduce using rule 106
	'}'            reduce using rule 106


State 87

	aexpression -> delimited('(',separated_list(expression,','),')') .    (rule 84)

	tvarId         reduce using rule 84
	tsymId         reduce using rule 84
	tsymconId      reduce using rule 84
	tqvarId        reduce using rule 84
	tqsymId        reduce using rule 84
	tqsymconId     reduce using rule 84
	integer        reduce using rule 84
	char           reduce using rule 84
	string         reduce using rule 84
	'of'           reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	','            reduce using rule 84
	';'            reduce using rule 84
	'['            reduce using rule 84
	']'            reduce using rule 84
	'`'            reduce using rule 84
	'}'            reduce using rule 84


State 88

	aexpression -> delimited('[',separated_nonempty_list(expression,','),']') .    (rule 85)

	tvarId         reduce using rule 85
	tsymId         reduce using rule 85
	tsymconId      reduce using rule 85
	tqvarId        reduce using rule 85
	tqsymId        reduce using rule 85
	tqsymconId     reduce using rule 85
	integer        reduce using rule 85
	char           reduce using rule 85
	string         reduce using rule 85
	'of'           reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	','            reduce using rule 85
	';'            reduce using rule 85
	'['            reduce using rule 85
	']'            reduce using rule 85
	'`'            reduce using rule 85
	'}'            reduce using rule 85


State 89

	qvarId -> tvarId .                                  (rule 5)

	tvarId         reduce using rule 5
	tsymId         reduce using rule 5
	tsymconId      reduce using rule 5
	tqvarId        reduce using rule 5
	tqsymId        reduce using rule 5
	tqsymconId     reduce using rule 5
	integer        reduce using rule 5
	char           reduce using rule 5
	string         reduce using rule 5
	'of'           reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	','            reduce using rule 5
	';'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'`'            reduce using rule 5
	'}'            reduce using rule 5


State 90

	qvarId -> tqvarId .                                 (rule 6)

	tvarId         reduce using rule 6
	tsymId         reduce using rule 6
	tsymconId      reduce using rule 6
	tqvarId        reduce using rule 6
	tqsymId        reduce using rule 6
	tqsymconId     reduce using rule 6
	integer        reduce using rule 6
	char           reduce using rule 6
	string         reduce using rule 6
	'of'           reduce using rule 6
	'('            reduce using rule 6
	')'            reduce using rule 6
	','            reduce using rule 6
	';'            reduce using rule 6
	'['            reduce using rule 6
	']'            reduce using rule 6
	'`'            reduce using rule 6
	'}'            reduce using rule 6


State 91

	aexpression -> integer .                            (rule 81)

	tvarId         reduce using rule 81
	tsymId         reduce using rule 81
	tsymconId      reduce using rule 81
	tqvarId        reduce using rule 81
	tqsymId        reduce using rule 81
	tqsymconId     reduce using rule 81
	integer        reduce using rule 81
	char           reduce using rule 81
	string         reduce using rule 81
	'of'           reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	','            reduce using rule 81
	';'            reduce using rule 81
	'['            reduce using rule 81
	']'            reduce using rule 81
	'`'            reduce using rule 81
	'}'            reduce using rule 81


State 92

	aexpression -> char .                               (rule 82)

	tvarId         reduce using rule 82
	tsymId         reduce using rule 82
	tsymconId      reduce using rule 82
	tqvarId        reduce using rule 82
	tqsymId        reduce using rule 82
	tqsymconId     reduce using rule 82
	integer        reduce using rule 82
	char           reduce using rule 82
	string         reduce using rule 82
	'of'           reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	','            reduce using rule 82
	';'            reduce using rule 82
	'['            reduce using rule 82
	']'            reduce using rule 82
	'`'            reduce using rule 82
	'}'            reduce using rule 82


State 93

	aexpression -> string .                             (rule 83)

	tvarId         reduce using rule 83
	tsymId         reduce using rule 83
	tsymconId      reduce using rule 83
	tqvarId        reduce using rule 83
	tqsymId        reduce using rule 83
	tqsymconId     reduce using rule 83
	integer        reduce using rule 83
	char           reduce using rule 83
	string         reduce using rule 83
	'of'           reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	','            reduce using rule 83
	';'            reduce using rule 83
	'['            reduce using rule 83
	']'            reduce using rule 83
	'`'            reduce using rule 83
	'}'            reduce using rule 83


State 94

	delimited('(',separated_list(expression,','),')') -> '(' . separated_list(expression,',') ')'    (rule 95)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	')'            reduce using rule 116
	','            reduce using rule 116
	'['            reduce using rule 141

	expression     goto state 113
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	separated_list(expression,',')goto state 114
	list(aexpression)goto state 50

State 95

	delimited('[',separated_nonempty_list(expression,','),']') -> '[' . separated_nonempty_list(expression,',') ']'    (rule 98)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression     goto state 111
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	separated_nonempty_list(expression,',')goto state 112
	list(aexpression)goto state 50

State 96

	operator -> qsymId .                                (rule 71)

	tvarId         reduce using rule 71
	tqvarId        reduce using rule 71
	integer        reduce using rule 71
	char           reduce using rule 71
	string         reduce using rule 71
	'case'         reduce using rule 71
	'\\'           reduce using rule 71
	'('            reduce using rule 71
	'['            reduce using rule 71


State 97

	operator -> qsymconId .                             (rule 72)

	tvarId         reduce using rule 72
	tqvarId        reduce using rule 72
	integer        reduce using rule 72
	char           reduce using rule 72
	string         reduce using rule 72
	'case'         reduce using rule 72
	'\\'           reduce using rule 72
	'('            reduce using rule 72
	'['            reduce using rule 72


State 98

	expression -> expression operator . expression10    (rule 76)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression10   goto state 110
	nonempty_list(aexpression)goto state 49
	list(aexpression)goto state 50

State 99

	qsymId -> tsymId .                                  (rule 9)

	tvarId         reduce using rule 9
	tqvarId        reduce using rule 9
	integer        reduce using rule 9
	char           reduce using rule 9
	string         reduce using rule 9
	'case'         reduce using rule 9
	'\\'           reduce using rule 9
	'('            reduce using rule 9
	'['            reduce using rule 9


State 100

	qsymconId -> tsymconId .                            (rule 11)

	tvarId         reduce using rule 11
	tqvarId        reduce using rule 11
	integer        reduce using rule 11
	char           reduce using rule 11
	string         reduce using rule 11
	'case'         reduce using rule 11
	'_'            reduce using rule 11
	'\\'           reduce using rule 11
	'('            reduce using rule 11
	'['            reduce using rule 11


State 101

	qsymId -> tqsymId .                                 (rule 10)

	tvarId         reduce using rule 10
	tqvarId        reduce using rule 10
	integer        reduce using rule 10
	char           reduce using rule 10
	string         reduce using rule 10
	'case'         reduce using rule 10
	'\\'           reduce using rule 10
	'('            reduce using rule 10
	'['            reduce using rule 10


State 102

	qsymconId -> tqsymconId .                           (rule 12)

	tvarId         reduce using rule 12
	tqvarId        reduce using rule 12
	integer        reduce using rule 12
	char           reduce using rule 12
	string         reduce using rule 12
	'case'         reduce using rule 12
	'_'            reduce using rule 12
	'\\'           reduce using rule 12
	'('            reduce using rule 12
	'['            reduce using rule 12


State 103

	operator -> '`' . qconId '`'                        (rule 73)
	operator -> '`' . qvarId '`'                        (rule 74)

	tvarId         shift, and enter state 89
	tconId         shift, and enter state 8
	tqvarId        shift, and enter state 90
	tqconId        shift, and enter state 9

	qvarId         goto state 108
	qconId         goto state 109

State 104

	pattern -> pattern qsymconId . pattern10            (rule 88)

	tvarId         shift, and enter state 2
	'_'            shift, and enter state 46

	varId          goto state 42
	pattern10      goto state 107
	apattern       goto state 45

State 105

	apattern -> varId '@' . apattern                    (rule 91)

	tvarId         shift, and enter state 2
	'_'            shift, and enter state 46

	varId          goto state 42
	apattern       goto state 106

State 106

	apattern -> varId '@' apattern .                    (rule 91)

	tvarId         reduce using rule 91
	tsymconId      reduce using rule 91
	tqsymconId     reduce using rule 91
	'_'            reduce using rule 91
	'='            reduce using rule 91
	'->'           reduce using rule 91


State 107

	pattern -> pattern qsymconId pattern10 .            (rule 88)

	tvarId         reduce using rule 88
	tsymconId      reduce using rule 88
	tqsymconId     reduce using rule 88
	'_'            reduce using rule 88
	'='            reduce using rule 88
	'->'           reduce using rule 88


State 108

	operator -> '`' qvarId . '`'                        (rule 74)

	'`'            shift, and enter state 143


State 109

	operator -> '`' qconId . '`'                        (rule 73)

	'`'            shift, and enter state 142


State 110

	expression -> expression operator expression10 .    (rule 76)

	tsymId         reduce using rule 76
	tsymconId      reduce using rule 76
	tqsymId        reduce using rule 76
	tqsymconId     reduce using rule 76
	'of'           reduce using rule 76
	')'            reduce using rule 76
	','            reduce using rule 76
	';'            reduce using rule 76
	']'            reduce using rule 76
	'`'            reduce using rule 76
	'}'            reduce using rule 76


State 111

	expression -> expression . operator expression10    (rule 76)
	separated_nonempty_list(expression,',') -> expression .    (rule 125)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	','            reduce using rule 125
	']'            reduce using rule 125
	'`'            shift, and enter state 103

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 112

	delimited('[',separated_nonempty_list(expression,','),']') -> '[' separated_nonempty_list(expression,',') . ']'    (rule 98)
	separated_nonempty_list(expression,',') -> separated_nonempty_list(expression,',') . ',' expression    (rule 124)

	','            shift, and enter state 140
	']'            shift, and enter state 141


State 113

	expression -> expression . operator expression10    (rule 76)
	separated_list(expression,',') -> expression .      (rule 115)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	')'            reduce using rule 115
	','            reduce using rule 115
	'`'            shift, and enter state 103

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 114

	delimited('(',separated_list(expression,','),')') -> '(' separated_list(expression,',') . ')'    (rule 95)
	separated_list(expression,',') -> separated_list(expression,',') . ',' expression    (rule 114)

	')'            shift, and enter state 138
	','            shift, and enter state 139


State 115

	expression10 -> 'case' expression 'of' . '{' separated_nonempty_list(option(casealternative),';') '}'    (rule 78)

	'{'            shift, and enter state 137


State 116

	expression10 -> '\\' nonempty_list(pattern) '->' . expression    (rule 77)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression     goto state 136
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	list(aexpression)goto state 50

State 117

	delimited('[',type,']') -> '[' type . ']'           (rule 99)

	']'            shift, and enter state 135


State 118

	gtycon -> '[' ']' .                                 (rule 51)

	tvarId         reduce using rule 51
	tconId         reduce using rule 51
	tqconId        reduce using rule 51
	'|'            reduce using rule 51
	'->'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'}'            reduce using rule 51


State 119

	separated_nonempty_list(type,',') -> type .         (rule 133)

	')'            reduce using rule 133
	','            reduce using rule 133


State 120

	gtycon -> '(' nonempty_list(',') . ')'              (rule 50)

	')'            shift, and enter state 134


State 121

	delimited('(',separated_nonempty_list(type,','),')') -> '(' separated_nonempty_list(type,',') . ')'    (rule 97)
	separated_nonempty_list(type,',') -> separated_nonempty_list(type,',') . ',' type    (rule 132)

	')'            shift, and enter state 132
	','            shift, and enter state 133


State 122

	nonempty_list(',') -> list(',') . ','               (rule 104)
	list(',') -> list(',') . ','                        (rule 136)

	','            shift, and enter state 131


State 123

	gtycon -> '(' '->' . ')'                            (rule 52)

	')'            shift, and enter state 130


State 124

	gtycon -> '(' ')' .                                 (rule 49)

	tvarId         reduce using rule 49
	tconId         reduce using rule 49
	tqconId        reduce using rule 49
	'|'            reduce using rule 49
	'->'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'}'            reduce using rule 49


State 125

	separated_nonempty_list(btype,'->') -> separated_nonempty_list(btype,'->') '->' btype .    (rule 120)

	'->'           reduce using rule 120
	')'            reduce using rule 120
	','            reduce using rule 120
	';'            reduce using rule 120
	']'            reduce using rule 120
	'}'            reduce using rule 120


State 126

	separated_nonempty_list(constructor,'|') -> separated_nonempty_list(constructor,'|') '|' . constructor    (rule 122)

	tconId         shift, and enter state 27

	conId          goto state 69
	constructor    goto state 129

State 127

	constructor -> conId list(atype) .                  (rule 40)
	list(atype) -> list(atype) . atype                  (rule 100)

	tvarId         shift, and enter state 2
	tconId         shift, and enter state 79
	tqconId        shift, and enter state 80
	'|'            reduce using rule 40
	'('            shift, and enter state 81
	';'            reduce using rule 40
	'['            shift, and enter state 82
	'}'            reduce using rule 40

	varId          goto state 73
	qtyconId       goto state 74
	atype          goto state 128
	gtycon         goto state 76
	delimited('(',separated_nonempty_list(type,','),')')goto state 77
	delimited('[',type,']')goto state 78

State 128

	list(atype) -> list(atype) atype .                  (rule 100)

	tvarId         reduce using rule 100
	tconId         reduce using rule 100
	tqconId        reduce using rule 100
	'|'            reduce using rule 100
	'('            reduce using rule 100
	';'            reduce using rule 100
	'['            reduce using rule 100
	'}'            reduce using rule 100


State 129

	separated_nonempty_list(constructor,'|') -> separated_nonempty_list(constructor,'|') '|' constructor .    (rule 122)

	'|'            reduce using rule 122
	';'            reduce using rule 122
	'}'            reduce using rule 122


State 130

	gtycon -> '(' '->' ')' .                            (rule 52)

	tvarId         reduce using rule 52
	tconId         reduce using rule 52
	tqconId        reduce using rule 52
	'|'            reduce using rule 52
	'->'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'}'            reduce using rule 52


State 131

	nonempty_list(',') -> list(',') ',' .               (rule 104)
	list(',') -> list(',') ',' .                        (rule 136)

	')'            reduce using rule 104
	','            reduce using rule 136


State 132

	delimited('(',separated_nonempty_list(type,','),')') -> '(' separated_nonempty_list(type,',') ')' .    (rule 97)

	tvarId         reduce using rule 97
	tconId         reduce using rule 97
	tqconId        reduce using rule 97
	'|'            reduce using rule 97
	'->'           reduce using rule 97
	'('            reduce using rule 97
	')'            reduce using rule 97
	','            reduce using rule 97
	';'            reduce using rule 97
	'['            reduce using rule 97
	']'            reduce using rule 97
	'}'            reduce using rule 97


State 133

	separated_nonempty_list(type,',') -> separated_nonempty_list(type,',') ',' . type    (rule 132)

	tvarId         reduce using rule 101
	tconId         reduce using rule 101
	tqconId        reduce using rule 101
	'('            reduce using rule 101
	'['            reduce using rule 101

	type           goto state 150
	btype          goto state 60
	list(atype)    goto state 61
	nonempty_list(atype)goto state 62
	separated_nonempty_list(btype,'->')goto state 63

State 134

	gtycon -> '(' nonempty_list(',') ')' .              (rule 50)

	tvarId         reduce using rule 50
	tconId         reduce using rule 50
	tqconId        reduce using rule 50
	'|'            reduce using rule 50
	'->'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'}'            reduce using rule 50


State 135

	delimited('[',type,']') -> '[' type ']' .           (rule 99)

	tvarId         reduce using rule 99
	tconId         reduce using rule 99
	tqconId        reduce using rule 99
	'|'            reduce using rule 99
	'->'           reduce using rule 99
	'('            reduce using rule 99
	')'            reduce using rule 99
	','            reduce using rule 99
	';'            reduce using rule 99
	'['            reduce using rule 99
	']'            reduce using rule 99
	'}'            reduce using rule 99


State 136

	expression -> expression . operator expression10    (rule 76)
	expression10 -> '\\' nonempty_list(pattern) '->' expression .    (rule 77)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	'of'           reduce using rule 77
	')'            reduce using rule 77
	','            reduce using rule 77
	';'            reduce using rule 77
	']'            reduce using rule 77
	'`'            shift, and enter state 103
	'}'            reduce using rule 77

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 137

	expression10 -> 'case' expression 'of' '{' . separated_nonempty_list(option(casealternative),';') '}'    (rule 78)

	tvarId         shift, and enter state 2
	'_'            shift, and enter state 46
	';'            reduce using rule 110
	'}'            reduce using rule 110

	varId          goto state 42
	casealternativegoto state 146
	pattern        goto state 147
	pattern10      goto state 44
	apattern       goto state 45
	option(casealternative)goto state 148
	separated_nonempty_list(option(casealternative),';')goto state 149

State 138

	delimited('(',separated_list(expression,','),')') -> '(' separated_list(expression,',') ')' .    (rule 95)

	tvarId         reduce using rule 95
	tsymId         reduce using rule 95
	tsymconId      reduce using rule 95
	tqvarId        reduce using rule 95
	tqsymId        reduce using rule 95
	tqsymconId     reduce using rule 95
	integer        reduce using rule 95
	char           reduce using rule 95
	string         reduce using rule 95
	'of'           reduce using rule 95
	'('            reduce using rule 95
	')'            reduce using rule 95
	','            reduce using rule 95
	';'            reduce using rule 95
	'['            reduce using rule 95
	']'            reduce using rule 95
	'`'            reduce using rule 95
	'}'            reduce using rule 95


State 139

	separated_list(expression,',') -> separated_list(expression,',') ',' . expression    (rule 114)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression     goto state 145
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	list(aexpression)goto state 50

State 140

	separated_nonempty_list(expression,',') -> separated_nonempty_list(expression,',') ',' . expression    (rule 124)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression     goto state 144
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	list(aexpression)goto state 50

State 141

	delimited('[',separated_nonempty_list(expression,','),']') -> '[' separated_nonempty_list(expression,',') ']' .    (rule 98)

	tvarId         reduce using rule 98
	tsymId         reduce using rule 98
	tsymconId      reduce using rule 98
	tqvarId        reduce using rule 98
	tqsymId        reduce using rule 98
	tqsymconId     reduce using rule 98
	integer        reduce using rule 98
	char           reduce using rule 98
	string         reduce using rule 98
	'of'           reduce using rule 98
	'('            reduce using rule 98
	')'            reduce using rule 98
	','            reduce using rule 98
	';'            reduce using rule 98
	'['            reduce using rule 98
	']'            reduce using rule 98
	'`'            reduce using rule 98
	'}'            reduce using rule 98


State 142

	operator -> '`' qconId '`' .                        (rule 73)

	tvarId         reduce using rule 73
	tqvarId        reduce using rule 73
	integer        reduce using rule 73
	char           reduce using rule 73
	string         reduce using rule 73
	'case'         reduce using rule 73
	'\\'           reduce using rule 73
	'('            reduce using rule 73
	'['            reduce using rule 73


State 143

	operator -> '`' qvarId '`' .                        (rule 74)

	tvarId         reduce using rule 74
	tqvarId        reduce using rule 74
	integer        reduce using rule 74
	char           reduce using rule 74
	string         reduce using rule 74
	'case'         reduce using rule 74
	'\\'           reduce using rule 74
	'('            reduce using rule 74
	'['            reduce using rule 74


State 144

	expression -> expression . operator expression10    (rule 76)
	separated_nonempty_list(expression,',') -> separated_nonempty_list(expression,',') ',' expression .    (rule 124)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	','            reduce using rule 124
	']'            reduce using rule 124
	'`'            shift, and enter state 103

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 145

	expression -> expression . operator expression10    (rule 76)
	separated_list(expression,',') -> separated_list(expression,',') ',' expression .    (rule 114)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	')'            reduce using rule 114
	','            reduce using rule 114
	'`'            shift, and enter state 103

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 146

	option(casealternative) -> casealternative .        (rule 109)

	';'            reduce using rule 109
	'}'            reduce using rule 109


State 147

	casealternative -> pattern . '->' expression        (rule 86)
	pattern -> pattern . qsymconId pattern10            (rule 88)

	tsymconId      shift, and enter state 100
	tqsymconId     shift, and enter state 102
	'->'           shift, and enter state 153

	qsymconId      goto state 104

State 148

	separated_nonempty_list(option(casealternative),';') -> option(casealternative) .    (rule 129)

	';'            reduce using rule 129
	'}'            reduce using rule 129


State 149

	expression10 -> 'case' expression 'of' '{' separated_nonempty_list(option(casealternative),';') . '}'    (rule 78)
	separated_nonempty_list(option(casealternative),';') -> separated_nonempty_list(option(casealternative),';') . ';' option(casealternative)    (rule 128)

	';'            shift, and enter state 151
	'}'            shift, and enter state 152


State 150

	separated_nonempty_list(type,',') -> separated_nonempty_list(type,',') ',' type .    (rule 132)

	')'            reduce using rule 132
	','            reduce using rule 132


State 151

	separated_nonempty_list(option(casealternative),';') -> separated_nonempty_list(option(casealternative),';') ';' . option(casealternative)    (rule 128)

	tvarId         shift, and enter state 2
	'_'            shift, and enter state 46
	';'            reduce using rule 110
	'}'            reduce using rule 110

	varId          goto state 42
	casealternativegoto state 146
	pattern        goto state 147
	pattern10      goto state 44
	apattern       goto state 45
	option(casealternative)goto state 155

State 152

	expression10 -> 'case' expression 'of' '{' separated_nonempty_list(option(casealternative),';') '}' .    (rule 78)

	tsymId         reduce using rule 78
	tsymconId      reduce using rule 78
	tqsymId        reduce using rule 78
	tqsymconId     reduce using rule 78
	'of'           reduce using rule 78
	')'            reduce using rule 78
	','            reduce using rule 78
	';'            reduce using rule 78
	']'            reduce using rule 78
	'`'            reduce using rule 78
	'}'            reduce using rule 78


State 153

	casealternative -> pattern '->' . expression        (rule 86)

	tvarId         reduce using rule 141
	tqvarId        reduce using rule 141
	integer        reduce using rule 141
	char           reduce using rule 141
	string         reduce using rule 141
	'case'         shift, and enter state 51
	'\\'           shift, and enter state 52
	'('            reduce using rule 141
	'['            reduce using rule 141

	expression     goto state 154
	expression10   goto state 48
	nonempty_list(aexpression)goto state 49
	list(aexpression)goto state 50

State 154

	expression -> expression . operator expression10    (rule 76)
	casealternative -> pattern '->' expression .        (rule 86)

	tsymId         shift, and enter state 99
	tsymconId      shift, and enter state 100
	tqsymId        shift, and enter state 101
	tqsymconId     shift, and enter state 102
	';'            reduce using rule 86
	'`'            shift, and enter state 103
	'}'            reduce using rule 86

	qsymId         goto state 96
	qsymconId      goto state 97
	operator       goto state 98

State 155

	separated_nonempty_list(option(casealternative),';') -> separated_nonempty_list(option(casealternative),';') ';' option(casealternative) .    (rule 128)

	';'            reduce using rule 128
	'}'            reduce using rule 128


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 144
Number of terminals: 53
Number of non-terminals: 76
Number of states: 156
